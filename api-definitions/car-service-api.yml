openapi: 3.0.3
info:
  title: Car Listing Service
  description: API for Car Listing Service
  version: 1.0.0
paths:
  /api/v1/cars:
    post:
      tags:
        - CarListing
      summary: Add a new car listing
      description: Adds a new car listing to the platform
      operationId: newCarListing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarListingCommand'
      responses:
        '201':
          description: Car listing added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCar'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /api/v1/cars/{carId}:
    patch:
      tags:
        - CarListing
      description: Change if the car listing is available or not
      operationId: UpdateCarById
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAvailabilityCar'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCar'
        '404':
          description: Car listing not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
        - CarListing
      description: Remove a car listing permanently from the platform
      operationId: DeleteCarById
      parameters:
        - in: path
          name: carId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Car listing removed
        '404':
          description: Car listing not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/v1/cars/search:
    get:
      tags:
        - CarListing
      summary: Search for a suitable car
      description: Allows a user to search for a car based on their needs such as location, type, and price.
      operationId: SearchCar
      parameters:
        - in: query
          name: location
          schema:
            type: string
          description: Location to search for cars
        - in: query
          name: carModel
          schema:
            type: string
          description: Model of car
        - in: query
          name: price
          schema:
            type: number
          description: Maximum price for the car
      responses:
        '200':
          description: A list of cars that match the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiCar'
        '400':
          description: Invalid search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

components:
  schemas:
    ReservedCarEvent:
      type: object
      properties:
        reservationId:
          type: integer
        carId:
          type: integer
        ownerEmail:
          type: string
          format: email
        available:
          type: boolean
    ReserveCarCommand:
      type: object
      properties:
        reservationId:
          type: integer
        carId:
          type: integer
    ConfirmOwnerCommand:
      type: object
      properties:
        reservationId:
          type: integer
        carId:
          type: integer
        ownerEmail:
          type: string
          format: email
        accepted:
          type: boolean
    ConfirmOwnerEvent:
      type: object
      properties:
        reservationId:
          type: integer
        carId:
          type: integer
        ownerEmail:
          type: string
          format: email
        price:
          type: number
        accepted:
          type: boolean
        isOwner:
          type: boolean
    CarListingCommand:
      type: object
      properties:
        ownerEmail:
          type: string
          format: email
        carModel:
          type: string
        year:
          type: integer
        location:
          type: string
        price:
          type: number
        available:
          type: boolean
          default: true
    updateAvailabilityCar:
      type: object
      properties:
        available:
          type: boolean
        ownerEmail:
          type: string
          format: email
    ApiCar:
      type: object
      properties:
        carId:
          type: integer
        ownerEmail:
          type: string
          format: email
        carModel:
          type: string
        year:
          type: integer
        location:
          type: string
        price:
          type: number
        available:
          type: boolean
    ApiError:
      type: object
      properties:
        code:
          type: string
          description: 'Functional code specifying the error'
          example: '2001'
        message:
          type: string
          description: 'Brief explanation about the error'
